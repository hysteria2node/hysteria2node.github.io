<!DOCTYPE html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://hysteria2node.github.io/news/article-39394.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>ThreadGroup解读</title>
        <meta name="description" content="ThreadGroup是位于java.lang包下的一个类,用于统一的线程管理.一旦一个线程加入到一个线程组后,就不能更换线程所在的线程组 将当前线程加入到线程组中 Thread thread = n" />
        <link rel="icon" href="/assets/website/img/hysteria2node/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel='stylesheet' href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="/assets/website/css/hysteria2node/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/hysteria2node/animate.min.css">
    <link rel="stylesheet" href="/assets/website/css/hysteria2node/app.css">
    <script src="/assets/website/js/frontend/hysteria2node/jquery.min.js"></script>
    <script> $(window).on('load', function(){ $(".loader").fadeOut(2000); }); </script>
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-9GWW1PHQLZ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-9GWW1PHQLZ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div class="loader"></div>
    <!-- NAVIGATION 
            =================-->
    <nav class="navbar navbar-expand-lg navbar-dark fixed-top" id="mainNav">
        <div class="container-fluid">
                        <a class="navbar-brand" href="/">
                Hysteria2 Node
            </a>
                        <button class="navbar-toggler navbar-toggler-right" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
                Menu
                <i class="fa fa-bars"></i>
            </button>
            <div class="collapse navbar-collapse" id="navbarResponsive">
                <ul class="navbar-nav text-uppercase ml-auto">
                                        <li class="nav-item">
                        <a class="nav-link" href="/">首页</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/free-nodes/">免费节点</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/news/">新闻资讯</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="#">关于</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">联系</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <!-- HEADER 
            =================-->
    <header id="conent" class="header-cat">
        <div class="container">
            <div class="row">
                <div class="col-md-12 text-center">
                    <h1>ThreadGroup解读</h1>
                    <p>
                      <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                    </p>
                </div>
            </div>
        </div>
    </header>
        <!-- HOW TO WORK 
            =================-->
    <section id="how-work" class="how-work">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>ThreadGroup是位于java.lang包下的一个类,用于统一的线程管理.一旦一个线程加入到一个线程组后,就不能更换线程所在的线程组</p> <p>将当前线程加入到线程组中</p> <pre class="prettyprint"><code class="hljs lasso"><span class="hljs-keyword">Thread</span> <span class="hljs-keyword">thread</span> <span class="hljs-subst">=</span> <span class="hljs-literal">new</span> <span class="hljs-keyword">Thread</span>(threadGroup, <span class="hljs-literal">new</span> MyThread(), <span class="hljs-string">"threadname-"</span> <span class="hljs-subst">+</span> i);</code></pre> <p>通过重写uncaughtException方法捕获异常</p> <pre class="prettyprint"><code class="hljs cs">ThreadGroup threadGroup = <span class="hljs-keyword">new</span> ThreadGroup(<span class="hljs-string">"test-group"</span>) {             @Override             <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">uncaughtException</span>(Thread t, Throwable e) {                 System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">"ThreadGroup捕获到线程异常 - "</span> + e.getMessage());             }         };</code></pre> <p>将ThreadGroup中活跃的线程引用复制到线程组</p> <pre class="prettyprint"><code class="hljs avrasm">Thread[] threads = new Thread[num]<span class="hljs-comment">;</span>         threadGroup<span class="hljs-preprocessor">.enumerate</span>(threads)<span class="hljs-comment">;</span>         for (Thread t : threads) {             System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.println</span>(<span class="hljs-string">"线程名-"</span> + t<span class="hljs-preprocessor">.getName</span>())<span class="hljs-comment">;</span>         }</code></pre> <p>测试源代码如下</p> <pre class="prettyprint"><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyThread</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Runnable</span> {<!-- --></span>      <span class="hljs-annotation">@Override</span>     <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">run</span>() {         <span class="hljs-keyword">try</span> {             System.out.println(Thread.currentThread().getName() + <span class="hljs-string">" -&gt; start"</span>);             TimeUnit.SECONDS.sleep(<span class="hljs-number">10</span>);             <span class="hljs-comment">//随机发生异常</span>             <span class="hljs-keyword">if</span> (ThreadLocalRandom.current().nextInt(<span class="hljs-number">10</span>) &gt; <span class="hljs-number">5</span>) {                 <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> RuntimeException(Thread.currentThread().getName() + <span class="hljs-string">"发生异常"</span>);             }             System.out.println(Thread.currentThread().getName() + <span class="hljs-string">" -&gt; end"</span>);         } <span class="hljs-keyword">catch</span> (InterruptedException e) {             e.printStackTrace();         }     } </code></pre> <pre class="prettyprint"><code class="hljs cs"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> ThreadGroupTest {     <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span>(String[] args) {         <span class="hljs-keyword">int</span> num = <span class="hljs-number">10</span>;         ThreadGroup threadGroup = <span class="hljs-keyword">new</span> ThreadGroup(<span class="hljs-string">"test-group"</span>) {             @Override             <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">uncaughtException</span>(Thread t, Throwable e) {                 System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">"ThreadGroup捕获到线程异常 - "</span> + e.getMessage());             }         };          List&lt;Thread&gt; threadList = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();         <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; num; i++) {             Thread thread = <span class="hljs-keyword">new</span> Thread(threadGroup, <span class="hljs-keyword">new</span> MyThread(), <span class="hljs-string">"threadname-"</span> + i);             threadList.add(thread);         }          System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">"运行前线程组中活跃线程数 -&gt; "</span> + threadGroup.activeCount());         System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">"开始运行所有线程..."</span>);         <span class="hljs-keyword">for</span> (Thread t : threadList) {             t.start();         }         <span class="hljs-comment">//获取线程组中所有[活动]线程</span>         Thread[] threads = <span class="hljs-keyword">new</span> Thread[num];         threadGroup.enumerate(threads);         <span class="hljs-keyword">for</span> (Thread t : threads) {             System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">"线程名-"</span> + t.getName());         }         System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">"所有线程运行后,线程组中活跃线程数-"</span> + threadGroup.activeCount());         <span class="hljs-comment">//不断的查看线程组中活跃的线程数</span>         Thread thread = <span class="hljs-keyword">new</span> Thread(() -&gt; {             <span class="hljs-keyword">int</span> num1;             <span class="hljs-keyword">try</span> {                 <span class="hljs-keyword">while</span> ((num1 = threadGroup.activeCount()) &gt; <span class="hljs-number">0</span>) {                     System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">"当前线程组活跃线程数为 -&gt; "</span> + num1);                     TimeUnit.SECONDS.sleep(<span class="hljs-number">1</span>);                 }                 System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">"All Thread HAS FINISHED"</span>);             } <span class="hljs-keyword">catch</span> (InterruptedException e) {                 e.printStackTrace();             }         });         thread.start();     } } </code></pre> <p>运行结果如下</p> <pre class="prettyprint"><code class="hljs lasso">运行前线程组中活跃线程数 <span class="hljs-subst">-&gt; </span><span class="hljs-number">0</span> 开始运行所有线程<span class="hljs-attribute">...</span> threadname<span class="hljs-subst">-</span><span class="hljs-number">0</span> <span class="hljs-subst">-&gt; </span>start threadname<span class="hljs-subst">-</span><span class="hljs-number">1</span> <span class="hljs-subst">-&gt; </span>start threadname<span class="hljs-subst">-</span><span class="hljs-number">2</span> <span class="hljs-subst">-&gt; </span>start threadname<span class="hljs-subst">-</span><span class="hljs-number">3</span> <span class="hljs-subst">-&gt; </span>start threadname<span class="hljs-subst">-</span><span class="hljs-number">4</span> <span class="hljs-subst">-&gt; </span>start threadname<span class="hljs-subst">-</span><span class="hljs-number">5</span> <span class="hljs-subst">-&gt; </span>start threadname<span class="hljs-subst">-</span><span class="hljs-number">6</span> <span class="hljs-subst">-&gt; </span>start threadname<span class="hljs-subst">-</span><span class="hljs-number">7</span> <span class="hljs-subst">-&gt; </span>start threadname<span class="hljs-subst">-</span><span class="hljs-number">8</span> <span class="hljs-subst">-&gt; </span>start 线程名<span class="hljs-attribute">-threadname</span><span class="hljs-subst">-</span><span class="hljs-number">0</span> threadname<span class="hljs-subst">-</span><span class="hljs-number">9</span> <span class="hljs-subst">-&gt; </span>start 线程名<span class="hljs-attribute">-threadname</span><span class="hljs-subst">-</span><span class="hljs-number">1</span> 线程名<span class="hljs-attribute">-threadname</span><span class="hljs-subst">-</span><span class="hljs-number">2</span> 线程名<span class="hljs-attribute">-threadname</span><span class="hljs-subst">-</span><span class="hljs-number">3</span> 线程名<span class="hljs-attribute">-threadname</span><span class="hljs-subst">-</span><span class="hljs-number">4</span> 线程名<span class="hljs-attribute">-threadname</span><span class="hljs-subst">-</span><span class="hljs-number">5</span> 线程名<span class="hljs-attribute">-threadname</span><span class="hljs-subst">-</span><span class="hljs-number">6</span> 线程名<span class="hljs-attribute">-threadname</span><span class="hljs-subst">-</span><span class="hljs-number">7</span> 线程名<span class="hljs-attribute">-threadname</span><span class="hljs-subst">-</span><span class="hljs-number">8</span> 线程名<span class="hljs-attribute">-threadname</span><span class="hljs-subst">-</span><span class="hljs-number">9</span> 所有线程运行后,线程组中活跃线程数<span class="hljs-subst">-</span><span class="hljs-number">10</span> 当前线程组活跃线程数为 <span class="hljs-subst">-&gt; </span><span class="hljs-number">10</span> 当前线程组活跃线程数为 <span class="hljs-subst">-&gt; </span><span class="hljs-number">10</span> 当前线程组活跃线程数为 <span class="hljs-subst">-&gt; </span><span class="hljs-number">10</span> 当前线程组活跃线程数为 <span class="hljs-subst">-&gt; </span><span class="hljs-number">10</span> 当前线程组活跃线程数为 <span class="hljs-subst">-&gt; </span><span class="hljs-number">10</span> 当前线程组活跃线程数为 <span class="hljs-subst">-&gt; </span><span class="hljs-number">10</span> 当前线程组活跃线程数为 <span class="hljs-subst">-&gt; </span><span class="hljs-number">10</span> 当前线程组活跃线程数为 <span class="hljs-subst">-&gt; </span><span class="hljs-number">10</span> 当前线程组活跃线程数为 <span class="hljs-subst">-&gt; </span><span class="hljs-number">10</span> 当前线程组活跃线程数为 <span class="hljs-subst">-&gt; </span><span class="hljs-number">10</span> threadname<span class="hljs-subst">-</span><span class="hljs-number">5</span> <span class="hljs-subst">-&gt; </span>end threadname<span class="hljs-subst">-</span><span class="hljs-number">8</span> <span class="hljs-subst">-&gt; </span>end ThreadGroup捕获到线程异常 <span class="hljs-subst">-</span> threadname<span class="hljs-subst">-</span><span class="hljs-number">7</span>发生异常 ThreadGroup捕获到线程异常 <span class="hljs-subst">-</span> threadname<span class="hljs-subst">-</span><span class="hljs-number">2</span>发生异常 threadname<span class="hljs-subst">-</span><span class="hljs-number">4</span> <span class="hljs-subst">-&gt; </span>end ThreadGroup捕获到线程异常 <span class="hljs-subst">-</span> threadname<span class="hljs-subst">-</span><span class="hljs-number">3</span>发生异常 ThreadGroup捕获到线程异常 <span class="hljs-subst">-</span> threadname<span class="hljs-subst">-</span><span class="hljs-number">9</span>发生异常 ThreadGroup捕获到线程异常 <span class="hljs-subst">-</span> threadname<span class="hljs-subst">-</span><span class="hljs-number">1</span>发生异常 threadname<span class="hljs-subst">-</span><span class="hljs-number">6</span> <span class="hljs-subst">-&gt; </span>end threadname<span class="hljs-subst">-</span><span class="hljs-number">0</span> <span class="hljs-subst">-&gt; </span>end <span class="hljs-literal">All</span> <span class="hljs-keyword">Thread</span> HAS FINISHED</code></pre> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-38924.htm">领养狗狗一般多少钱（领养狗狗花钱吗）</a></p>
                                        <p>下一个：<a href="/news/article-39395.htm">学宠物美容师需要多少钱（学宠物美容师需要多少钱一个月）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-38424.htm" title="猫三联一共几针,多少钱天津（猫三联到底是两针还是三针）">猫三联一共几针,多少钱天津（猫三联到底是两针还是三针）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-5-latest-hysteria-node.htm" title="12月5日 | Hysteria2每天更新18M/S免费节点订阅链接">12月5日 | Hysteria2每天更新18M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-3-today-hysteria-node.htm" title="1月3日 | Hysteria2每天更新22.9M/S免费节点订阅链接">1月3日 | Hysteria2每天更新22.9M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-36469.htm" title="宠物店一包猫粮多少钱 宠物店一包猫粮多少钱啊">宠物店一包猫粮多少钱 宠物店一包猫粮多少钱啊</a></li>
                        <li class="py-2"><a href="/news/article-23739.htm" title="领养协议书范本图片大全（领养协议书范本图片大全集）">领养协议书范本图片大全（领养协议书范本图片大全集）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-9-today-hysteria-node.htm" title="11月9日 | Hysteria2每天更新22.7M/S免费节点订阅链接">11月9日 | Hysteria2每天更新22.7M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-34561.htm" title="天津宠物狗领养（天津狗狗领养吧）">天津宠物狗领养（天津狗狗领养吧）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-18-free-high-speed-nodes.htm" title="11月18日 | Hysteria2每天更新18.2M/S免费节点订阅链接">11月18日 | Hysteria2每天更新18.2M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-20068.htm" title="领养宠物的软件平台叫什么 领养宠物的软件平台叫什么名字">领养宠物的软件平台叫什么 领养宠物的软件平台叫什么名字</a></li>
                        <li class="py-2"><a href="/news/article-29785.htm" title="Metalama简介3.自定义.NET项目中的代码分析">Metalama简介3.自定义.NET项目中的代码分析</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">36</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <!-- FOOTER 
            =================-->
    <footer>
        <div class="container-fluid footer-b text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
            <small>Hysteria2 Node免费节点分享站 版权所有 Powered by WordPress</small>
        </div>
    </footer>
    <script src="/assets/website/js/frontend/hysteria2node/popper.min.js"></script>
    <script src="/assets/website/js/frontend/hysteria2node/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/hysteria2node/jquery.easing.min.js"></script>
    <script src="/assets/website/js/frontend/hysteria2node/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/hysteria2node/wow.min.js"></script>
    <script src="/assets/website/js/frontend/hysteria2node/app.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>